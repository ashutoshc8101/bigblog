/*
MySQL Backup
Source Server Version: 5.7.17
Source Database: bigblog
Date: 5/28/2017 14:34:31
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
--  Table structure for `blogs`
-- ----------------------------
DROP TABLE IF EXISTS `blogs`;
CREATE TABLE `blogs` (
  `id` int() unsigned NOT NULL AUTO_INCREMENT,
  `slug` varchar() COLLATE utf8mb4_unicode_ci NOT NULL,
  `title` varchar() COLLATE utf8mb4_unicode_ci NOT NULL,
  `body` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `banner` varchar() COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `user_id` int() NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `blogs_slug_unique` (`slug`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- ----------------------------
--  Table structure for `migrations`
-- ----------------------------
DROP TABLE IF EXISTS `migrations`;
CREATE TABLE `migrations` (
  `id` int() unsigned NOT NULL AUTO_INCREMENT,
  `migration` varchar() COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int() NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- ----------------------------
--  Table structure for `password_resets`
-- ----------------------------
DROP TABLE IF EXISTS `password_resets`;
CREATE TABLE `password_resets` (
  `email` varchar() COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar() COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  KEY `password_resets_email_index` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- ----------------------------
--  Table structure for `taggables`
-- ----------------------------
DROP TABLE IF EXISTS `taggables`;
CREATE TABLE `taggables` (
  `id` int() unsigned NOT NULL AUTO_INCREMENT,
  `tag_id` int() NOT NULL,
  `taggable_id` int() NOT NULL,
  `taggable_type` varchar() NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

-- ----------------------------
--  Table structure for `tags`
-- ----------------------------
DROP TABLE IF EXISTS `tags`;
CREATE TABLE `tags` (
  `id` int() unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar() COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar() COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- ----------------------------
--  Table structure for `users`
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `id` int() unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar() COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar() COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar() COLLATE utf8mb4_unicode_ci NOT NULL,
  `remember_token` varchar() COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `users_email_unique` (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- ----------------------------
--  Records 
-- ----------------------------
INSERT INTO `blogs` VALUES ('1','what-is-lorem-ipsum','What is Lorem Ipsum?','Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum','https://cdn.scotch.io/1/NbffvqlVSD2R6iXoJw6K_laravel-user-authorization-user-roles-acl-spatie-permission.png.jpg','1','2017-05-17 15:25:53','2017-05-17 15:25:56'), ('2','vue-router','Vue Router','Part1 of this tutorial dealt with the basics of building a single page application, with page linking automatically done by Vue. In this tutorial, you will learn how to:\r\n\r\npass parameters alongside the routes, and\r\nuse route guards to protect routes and block off non-authenticated users from visiting the site.\r\nStarting off from the end of the last tutorial, head over to the GitHub repository to clone and continue with the application.\r\n\r\n# What will you build?\r\n\r\nYou are going to build on the existing project done in Part 1, add navigation guards and a route to pass parameters.\r\n\r\n\r\nHere is a pictorial view of what we will be building. \r\n\r\n# Passing parameters to routes\r\n\r\nIn Vue, parameters can be passed to a route by simply putting the : attribute before the parameter name. This is somewhat similar to the routing mechanism in Laravel. If you are familiar with Laravel, the {} annotation is used to specify a route.\r\n\r\nLook at the example below, taken from the Vue router documentation.\r\n\r\n{ path: \'/user/:id\', component: User } \r\nFrom the example, it can be said that the route will give the result of /users/2 , or any integer in place of 2. Whatever content the parameter holds will be referred to as the “id”, which can be accessed using $route.params.id in the User component, which was declared as its component. Let’s begin!\r\n\r\nCreating the parameter route\r\n\r\nCreate a new component in the src\\components folder called Param.vue , and copy the following contents into it:\r\n\r\n//src\\components\\Param.vue\r\nexport default {\r\n    name: \'Param\',\r\n    data () {\r\n        return {\r\n        UserInput :\'\'\r\n        }\r\n\r\n    }, \r\n    methods:{\r\n        GoToRoute : function(){\r\n        this.$router.push({ name: \'Paramdetails\', params: { id: this.UserInput }})\r\n        }\r\n    }\r\n}\r\nIn the above piece of code, a param component was defined, which is the template that holds a text box and a button.\r\n\r\nNow, go to the main.js file, import the Param component, as well as create a path that handles the route.\r\n\r\nJust above the Const routes block of code, add the following import:\r\n\r\n//main.js\r\nimport Param from \'./components/Param \r\nAfter doing the above and importing the param component, replace the routes block with this:\r\n\r\n\r\n//main.js\r\n//define your routes\r\nconst routes = [\r\n//route for the home route of the webpage\r\n{ path: \'/\', component: Hello },\r\n//route for the about route of the webpage\r\n{ path: \'/about\', component: About }, \r\n//route for the param route of the webpage\r\n{ path: \'/param\', component: Param }\r\n]\r\nNotice that in the above piece of code, the only difference that occurred was the addition of the param route. However, there is one more step to go so that the route can be shown with the about and home links.\r\n\r\nUse the router link tag in our App.vue file, and add the following line of code, just after the “about” link:\r\n\r\n<!--src\\components\\App.vue-->\r\n<router-link v-bind:to=\"\'/param\'\">Param Link</router-link>\r\nTake a look at the homepage, it should look like this:\r\n\r\n\r\n\r\nNotice that the param link is just after the “about” link. Click on the param link, and you should see the following:\r\n\r\n\r\n\r\nOpen up the developer\'s tool in the console. If you click on the button, you will likely encounter this error.\r\n\r\n  [vue-router] Route with name \'Paramdetails\' does not exist\r\nThis is because, in the code above, the method attached to the button triggers this:\r\n\r\nthis.$router.push({ name: \'Paramdetails\', params: { id: this.UserInput }}), which has not defined any route called paramdetails that accepts parameters.\r\n\r\nThe next step is to create the component that handles the route. Create a new file in src/components called paramedetails.vue, and paste the following contents into it.\r\n\r\n\r\n<!--src/components/paramdetails.vue-->\r\n    The paremeter value that was passed to me is: {{ $route.params.id }}\r\n\r\n    export default {\r\n    name: \'paramdetails\'\r\n    }\r\nThis creates a component that holds a span element, which also prints out the parameter that was passed to it. For this to work, add this new component to the routes.\r\n\r\nJust above the Const routes block of code, add the following import:\r\n\r\n//main.js\r\n//import paramdetails component\r\nimport paramdetails from \'./components/paramdetails\'\r\nAfter doing the above, and importing the paramdetails component, replace the routes block with this:\r\n\r\n //main.js\r\n   //define your routes\r\n    const routes = [\r\n    //route for the home route of the web page\r\n    { path: \'/\', component: Hello },\r\n    //route for the about route of the web page\r\n    { path: \'/about\', component: About }, \r\n    //route for the param route of the web page\r\n    { path: \'/param\', component: Param },\r\n    //route for the paramdetails passing in params\r\n    { path: \'/Paramdetails/:id\', component: paramdetails, name: \'Paramdetails\' }\r\n    ]\r\nNotice that the last route has two new adjustments, which was not visible in other routes. The first adjustment is the : id, which is the placeholder for the routes you are passing in. The second adjustment is the name object in the route object.\r\n\r\nTo understand the name property in the object, know that just like any other router, the Vue router contains the concept of naming routes. Instead of remembering the full URL of the new route, the shorter way of calling routes is by naming the routes. Also, take a look back at the GoToRoute method in the param component, you will see that the router object is being pushed, which identifies the route by name.\r\n\r\nNow, click on the param link link, and type in 52 in the text box, for example. Then click the go to route button, and you should see a page like this:\r\n\r\n\r\n\r\nThat is it! You have just passed in your first route to the component. Super easy, isn\'t it?\r\n\r\n# Using route guards\r\n\r\nA route guard is a watcher that watches for changes in the routes and performs some actions, either before the route is transitioned into the next one, or after the route has been transitioned. Route guards can be used to protect routes against non-authenticated users from visiting the site. Vue router has global guards, per-route guards, as well as component guards.\r\n\r\nThere are two major global routes produced by Vue router namely: beforeEach and afterEach guards. As the name implies, the “beforeEach” is performed before a new route is transitioned, as opposed to the “afterEach” guard.\r\n\r\nPer-routes guards can be added to the route object of the particular route to be guarded as a callback, while the “in-component” guards are defined in the components that handle those routes. For the purpose of this tutorial, stick to the “beforeEach” global route.\r\n\r\nOpen the main.js file, and immediately after the routes constant, add the following:\r\n\r\n\r\n//main.js\r\n//place the router guard\r\nrouter.beforeEach((to, from, next) => {\r\n    //check if the path user is going to is our param path\r\n    if(to.path == \'/param\'){\r\n        //check if the user item is already set\r\n        if(localStorage.getItem(\'user\')==undefined){\r\n            //prompt for username\r\n            var user = prompt(\'please enter your username\');\r\n            //prompt for password\r\n            var pass = prompt(\'please enter your password\');\r\n            //check if th username and password given equals our preset details\r\n            if (user == \'username\' && pass == \'password\'){\r\n            //set the user item\r\n            localStorage.setItem(\'user\', user);\r\n            //move to the route\r\n            next();\r\n            }else{\r\n            //alert the username and pass is wrong\r\n            alert(\'Wrong username and password, you do not have permission to access that route\');\r\n            //return, do not move to the route\r\n            return;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    next()\r\n})\r\nThe “router.beforeEach” function was called and it takes three arguments that are passed to it by the Vue router. The to parameter refers to the object of the path to be accessed, while the from parameter refers to the object of the previous path.\r\n\r\nCheck if the “to.path” is /param, which is the path for the route to be protected. If the path corresponds to the one to be protected, check the “localStorage” data holding the user details to see if it is defined. If the “localStorage” data is not defined, prompt for the username and password, and create the “localStorage” data. If it is defined, the function continues and the route is visible to the user.\r\n\r\n\r\n\r\nNote: The next function must be called so that the router can process the user to the next page. If the function isn\'t called, a blank screen could come up. In this tutorial, a raw string of username and password was used for the authentication details. However, a lot more can be done, such as requesting user authentication via a server.\r\n\r\n# Conclusion\r\n\r\nYou should now be able to pass parameters to routes, know what named routes are, and how to create them. Also, the types of route guards, as well as an implementation for the “beforeEach” route guard was explained.\r\n\r\nNow, you should be able to create a single page application, register routes, pass in parameters to the routes, as well as guarding the routes. On these premises, you can begin to build awesome single page<hr> <h1>applications.</h1>','https://cdn.scotch.io/17209/tVM7xE4rRjGYqvedwMBG_gg.jpg','2','2017-05-17 15:59:17','2017-05-17 15:59:20'), ('3','java-applet-starter','Java Applet Starter','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n</head>\r\n<body>\r\n<pre class=\"language-java\"><code>/*\r\n        Set Foreground Color Of an Applet Window Example\r\n        This java example shows how to set foreground color of an Applet window using\r\n        setForeground method of component class.\r\n*/\r\n \r\n/*\r\n&lt;applet code=\"SetForegroundColorExample\" width=200 height=200&gt;\r\n&lt;/applet&gt;\r\n*/\r\n \r\n \r\nimport java.applet.Applet;\r\nimport java.awt.Color;\r\nimport java.awt.Graphics;\r\n \r\npublic class SetForegroundColorExample extends Applet{\r\n \r\n        public void paint(Graphics g){\r\n                /*\r\n                 * Set foreground color of an applet using\r\n                 * void setForeground(Color c) method.\r\n                 */\r\n               \r\n                setForeground(Color.red);\r\n                g.drawString(\"Foreground color set to red\", 50, 50);\r\n        }\r\n}</code></pre>\r\n</body>\r\n</html>',NULL,'1','2017-05-17 17:00:15','2017-05-17 17:00:15'), ('4','c','C++','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n</head>\r\n<body>\r\n<pre><code>#include &lt;cstdlib&gt; \r\n#include &lt;iostream&gt; \r\nusing namespace std; \r\n  \r\nint main(int argc, char *argv[]) \r\n{ \r\n    cout&lt;&lt;\"*****\\n\"; \r\n    cout&lt;&lt;\"*****\\n\"; \r\n    cout&lt;&lt;\"*****\\n\"; \r\n    cout&lt;&lt;\"*****\\n\"; \r\n    cout&lt;&lt;\"*****\\n\"; \r\n    system(\"PAUSE\"); \r\n    return EXIT_SUCCESS; \r\n}</code></pre>\r\n</body>\r\n</html>',NULL,'1','2017-05-17 17:01:59','2017-05-17 17:01:59'), ('5','asfdf','asfdf','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n</head>\r\n<body>\r\n<p>sfjkksdfj</p>\r\n</body>\r\n</html>',NULL,'1','2017-05-17 17:02:30','2017-05-17 17:02:30'), ('6','sadfsd-sdf','sadfsd  sdf','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n</head>\r\n<body>\r\n<h1 id=\"mcetoc_1bgbltp030\">sfd sfsdfsdf &nbsp;sd</h1>\r\n</body>\r\n</html>','asdfd','1','2017-05-17 17:05:19','2017-05-17 17:05:19'), ('7','how-to-create-a-blog','How to create a blog','<!DOCTYPE html>\r\n<html>\r\n<head>\r\n</head>\r\n<body>\r\n<p style=\"text-align: center; font-size: 15px;\"><img title=\"TinyMCE Logo\" src=\"//www.tinymce.com/images/glyph-tinymce@2x.png\" alt=\"TinyMCE Logo\" width=\"110\" height=\"97\" /></p>\r\n<h1 style=\"text-align: center;\">Welcome to the TinyMCE &amp; Community Plugins demo!</h1>\r\n<h5 style=\"text-align: center;\">Note, this is not an \"enterprise/premium\" demo.<br />Visit the <a href=\"https://www.tinymce.com/pricing/#demo-enterprise\">pricing page</a> to demo our premium plugins.</h5>\r\n<p>Please try out the features provided in this full featured example.</p>\r\n<p>Note that any <strong>MoxieManager</strong> file and image management functionality in this example is part of our commercial offering &ndash; the demo is to show the integration.</p>\r\n<h2>Got questions or need help?</h2>\r\n<ul>\r\n<li>Our <a href=\"//www.tinymce.com/docs/\">documentation</a> is a great resource for learning how to configure TinyMCE.</li>\r\n<li>Have a specific question? Visit the <a href=\"http://community.tinymce.com/forum/\">Community Forum</a>.</li>\r\n<li>We also offer enterprise grade support as part of <a href=\"http://tinymce.com/pricing\">TinyMCE Enterprise</a>.</li>\r\n</ul>\r\n<h2>A simple table to play with</h2>\r\n<table style=\"text-align: center;\">\r\n<thead>\r\n<tr>\r\n<th>Product</th>\r\n<th>Cost</th>\r\n<th>Really?</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>TinyMCE</td>\r\n<td>Free</td>\r\n<td>YES!</td>\r\n</tr>\r\n<tr>\r\n<td>Plupload</td>\r\n<td>Free</td>\r\n<td>YES!</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>Found a bug?</h2>\r\n<p>If you think you have found a bug please create an issue on the <a href=\"https://github.com/tinymce/tinymce/issues\">GitHub repo</a> to report it to the developers.</p>\r\n<h2>Finally ...</h2>\r\n<p>Don\'t forget to check out our other product <a href=\"http://www.plupload.com\" target=\"_blank\" rel=\"noopener noreferrer\">Plupload</a>, your ultimate upload solution featuring HTML5 upload support.</p>\r\n<p>Thanks for supporting TinyMCE! We hope it helps you and your users create great content.<br />All the best from the TinyMCE team.</p>\r\n</body>\r\n</html>','img.jpg','1','2017-05-17 17:16:21','2017-05-17 17:16:21');
INSERT INTO `migrations` VALUES ('1','2014_10_12_000000_create_users_table','1'), ('2','2014_10_12_100000_create_password_resets_table','1'), ('3','2017_05_17_094841_blogs','2'), ('4','2017_05_17_110218_tags','3'), ('5','2017_05_17_111451_tagtable','4');
INSERT INTO `taggables` VALUES ('1','1','1','App\\Blog'), ('2','2','1','App\\Blog'), ('3','3','2','App\\Blog'), ('4','4','2','App\\Blog'), ('5','1','1','App\\User'), ('6','2','1','App\\User'), ('7','3','1','App\\User'), ('8','4','1','App\\User'), ('9','5','3','App\\Blog'), ('10','1','3','App\\User');
INSERT INTO `tags` VALUES ('1','php','php','2017-05-17 16:51:37','2017-05-17 16:51:39'), ('2','Laravel','laravel','2017-05-17 16:54:13','2017-05-17 16:54:14'), ('3','Javascript','javascript','2017-05-17 17:16:21','2017-05-17 17:16:23'), ('4','VUE JS','vue-js','2017-05-17 17:16:35','2017-05-17 17:16:38'), ('5','Java','java','2017-05-28 12:03:16','2017-05-28 12:03:18');
INSERT INTO `users` VALUES ('1','admin','admin@admin.com','$2a$06$UZm.A0HKMrr4nnLAaUuifuB/Yi2fN1y8dENOMuVA.iWXMCmi367X6','xknR8wLMi06XwPCwyTmxzpKDno6c0M37Dc5v7HgoiSf6M5YGZIfFxZlZfMoB','2017-05-17 15:26:22','2017-05-17 15:26:24'), ('2','regulator','regular@regular.com','$2a$06$UZm.A0HKMrr4nnLAaUuifuB/Yi2fN1y8dENOMuVA.iWXMCmi367X6',NULL,'2017-05-17 17:13:49','2017-05-17 17:13:52'), ('3','Harsh Chandel','rumachandel811@gmail.com','$2y$10$ZE5fkXUGR7Df3NTxInaiOOoSC8PdP5oE7b8bKwqqChJasmBZfHlmm','ovLxq34po98PKPVuZpndgwVmFM0pLDLydgSP5FqZIvnfxB4negUWLP4dtMse','2017-05-28 12:24:41','2017-05-28 12:24:44');
